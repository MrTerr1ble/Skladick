# seed_thresholds.py
import os
import django
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ apps
current_dir = os.path.dirname(__file__)
apps_path = os.path.join(current_dir, 'apps')
sys.path.insert(0, apps_path)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'skladick.settings')
django.setup()

from decimal import Decimal
from apps.catalog.models import Item
from apps.warehouses.models import Warehouse, Location
from apps.thresholds.models import Threshold, Alert

print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –∞–ª–µ—Ä—Ç–æ–≤...")

try:
    # 1. –ü–æ—Ä–æ–≥–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    print("üìä –°–æ–∑–¥–∞–µ–º –ø–æ—Ä–æ–≥–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤...")

    # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
    critical_items = [
        {
            'sku': 'TOOL_DRILL',
            'min_qty': Decimal('10.000'),  # –ú–∏–Ω–∏–º—É–º 10 —à—Ç—É–∫
            'max_qty': Decimal('100.000')  # –ú–∞–∫—Å–∏–º—É–º 100 —à—Ç—É–∫
        },
        {
            'sku': 'CHEM_REAGENT',
            'min_qty': Decimal('50.000'),  # –ú–∏–Ω–∏–º—É–º 50 –ª–∏—Ç—Ä–æ–≤
            'max_qty': Decimal('500.000')  # –ú–∞–∫—Å–∏–º—É–º 500 –ª–∏—Ç—Ä–æ–≤
        },
        {
            'sku': 'SPARE_ENGINE',
            'min_qty': Decimal('2.000'),  # –ú–∏–Ω–∏–º—É–º 2 —à—Ç—É–∫–∏
            'max_qty': Decimal('10.000')  # –ú–∞–∫—Å–∏–º—É–º 10 —à—Ç—É–∫
        }
    ]

    # –ü–æ—Ä–æ–≥–∏ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    normal_items = [
        {
            'sku': 'EQUIP_EXCAVATOR',
            'min_qty': Decimal('1.000'),  # –ú–∏–Ω–∏–º—É–º 1 —à—Ç—É–∫–∞
            'max_qty': Decimal('5.000')  # –ú–∞–∫—Å–∏–º—É–º 5 —à—Ç—É–∫
        }
    ]

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–∫–ª–∞–¥—ã
    warehouses = Warehouse.objects.all()

    # –°–æ–∑–¥–∞–µ–º –ø–æ—Ä–æ–≥–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –Ω–∞ –≤—Å–µ—Ö —Å–∫–ª–∞–¥–∞—Ö
    for warehouse in warehouses:
        for item_data in critical_items:
            try:
                item = Item.objects.get(sku=item_data['sku'])

                threshold, created = Threshold.objects.get_or_create(
                    warehouse=warehouse,
                    item=item,
                    defaults={
                        'min_qty': item_data['min_qty'],
                        'max_qty': item_data['max_qty'],
                        'uom': item.base_uom
                    }
                )
                if created:
                    print(f'  ‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ—Ä–æ–≥ –¥–ª—è {item.name} –Ω–∞ {warehouse.name}: '
                          f'min={item_data["min_qty"]}, max={item_data["max_qty"]}')

            except Item.DoesNotExist:
                print(f'  ‚ö†Ô∏è  –¢–æ–≤–∞—Ä {item_data["sku"]} –Ω–µ –Ω–∞–π–¥–µ–Ω')

    # 2. –ü–æ—Ä–æ–≥–∏ –¥–ª—è —Ä—É–¥—ã (—Å–∫–ª–∞–¥—ã —Å–µ–≤–µ—Ä–Ω—ã—Ö —Ä—É–¥–Ω–∏–∫–æ–≤)
    print("\n‚õ∞Ô∏è –°–æ–∑–¥–∞–µ–º –ø–æ—Ä–æ–≥–∏ –¥–ª—è —Ä—É–¥—ã...")

    ore_items = [
        {
            'sku': 'ORE_COPPER',
            'min_qty': Decimal('1000.000'),  # –ú–∏–Ω–∏–º—É–º 1000 —Ç–æ–Ω–Ω
            'max_qty': Decimal('8000.000')  # –ú–∞–∫—Å–∏–º—É–º 8000 —Ç–æ–Ω–Ω
        },
        {
            'sku': 'ORE_NICKEL',
            'min_qty': Decimal('800.000'),  # –ú–∏–Ω–∏–º—É–º 800 —Ç–æ–Ω–Ω
            'max_qty': Decimal('6000.000')  # –ú–∞–∫—Å–∏–º—É–º 6000 —Ç–æ–Ω–Ω
        },
        {
            'sku': 'ORE_IRON',
            'min_qty': Decimal('2000.000'),  # –ú–∏–Ω–∏–º—É–º 2000 —Ç–æ–Ω–Ω
            'max_qty': Decimal('12000.000')  # –ú–∞–∫—Å–∏–º—É–º 12000 —Ç–æ–Ω–Ω
        },
        {
            'sku': 'ORE_GOLD',
            'min_qty': Decimal('500.000'),  # –ú–∏–Ω–∏–º—É–º 500 —Ç–æ–Ω–Ω
            'max_qty': Decimal('3000.000')  # –ú–∞–∫—Å–∏–º—É–º 3000 —Ç–æ–Ω–Ω
        }
    ]

    # –ü–æ—Ä–æ–≥–∏ –¥–ª—è —Ä—É–¥—ã —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ–≤–µ—Ä–Ω—ã—Ö —Ä—É–¥–Ω–∏–∫–∞—Ö
    north_warehouses = Warehouse.objects.filter(code__contains='NORTH')

    for warehouse in north_warehouses:
        for ore_data in ore_items:
            try:
                item = Item.objects.get(sku=ore_data['sku'])

                threshold, created = Threshold.objects.get_or_create(
                    warehouse=warehouse,
                    item=item,
                    defaults={
                        'min_qty': ore_data['min_qty'],
                        'max_qty': ore_data['max_qty'],
                        'uom': item.base_uom
                    }
                )
                if created:
                    print(f'  ‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ—Ä–æ–≥ –¥–ª—è {item.name} –Ω–∞ {warehouse.name}: '
                          f'min={ore_data["min_qty"]}, max={ore_data["max_qty"]}')

            except Item.DoesNotExist:
                print(f'  ‚ö†Ô∏è  –†—É–¥–∞ {ore_data["sku"]} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')

    # 3. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∞–ª–µ—Ä—Ç—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    print("\n‚ö†Ô∏è –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∞–ª–µ—Ä—Ç—ã...")

    # –ê–ª–µ—Ä—Ç –¥–ª—è –Ω–∏–∑–∫–æ–≥–æ –æ—Å—Ç–∞—Ç–∫–∞ –±—É—Ä–æ–≤–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
    try:
        drill_item = Item.objects.get(sku='TOOL_DRILL')
        warehouse = Warehouse.objects.first()

        # –°–æ–∑–¥–∞–µ–º –∞–ª–µ—Ä—Ç –æ –Ω–∏–∑–∫–æ–º –æ—Å—Ç–∞—Ç–∫–µ
        alert, created = Alert.objects.get_or_create(
            warehouse=warehouse,
            item=drill_item,
            current_qty=Decimal('5.000'),  # –¢–µ–∫—É—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∏–∂–µ –º–∏–Ω–∏–º—É–º–∞
            uom=drill_item.base_uom,
            severity=Alert.CRIT,
            message="–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–∏–π –∑–∞–ø–∞—Å –±—É—Ä–æ–≤–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞. –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ —Å—Ä–æ—á–Ω–∞—è –∑–∞–∫—É–ø–∫–∞.",
            correlation_id="LOW_STOCK_DRILL_001"
        )
        if created:
            print(f'  ‚úÖ –°–æ–∑–¥–∞–Ω –∞–ª–µ—Ä—Ç: {alert.message}')

    except Item.DoesNotExist:
        print('  ‚ö†Ô∏è  –ë—É—Ä–æ–≤–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–ª–µ—Ä—Ç–∞')

    # –ê–ª–µ—Ä—Ç –¥–ª—è –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏—è –º–µ–¥–Ω–æ–π —Ä—É–¥—ã
    try:
        copper_item = Item.objects.get(sku='ORE_COPPER')
        north_warehouse = north_warehouses.first()

        alert, created = Alert.objects.get_or_create(
            warehouse=north_warehouse,
            item=copper_item,
            current_qty=Decimal('8500.000'),  # –¢–µ–∫—É—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫ –≤—ã—à–µ –º–∞–∫—Å–∏–º—É–º–∞
            uom=copper_item.base_uom,
            severity=Alert.WARN,
            message="–ü—Ä–µ–≤—ã—à–µ–Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –¥–ª—è –º–µ–¥–Ω–æ–π —Ä—É–¥—ã. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–≥—Ä—É–∑–∫–∏.",
            correlation_id="HIGH_STOCK_COPPER_001"
        )
        if created:
            print(f'  ‚úÖ –°–æ–∑–¥–∞–Ω –∞–ª–µ—Ä—Ç: {alert.message}')

    except Item.DoesNotExist:
        print('  ‚ö†Ô∏è  –ú–µ–¥–Ω–∞—è —Ä—É–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–ª–µ—Ä—Ç–∞')

    # 4. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –í—Å–µ–≥–æ –ø–æ—Ä–æ–≥–æ–≤: {Threshold.objects.count()}")
    print(f"   –í—Å–µ–≥–æ –∞–ª–µ—Ä—Ç–æ–≤: {Alert.objects.count()}")
    print(f"   –ê–∫—Ç–∏–≤–Ω—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤: {Alert.objects.filter(state='OPEN').count()}")

    print("\n‚úÖ –ì—Ä–∞–Ω–∏—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –∞–ª–µ—Ä—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")

except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback

    traceback.print_exc()